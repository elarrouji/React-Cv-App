{"version":3,"sources":["Components/Experience.js","Components/GeneralInfo.js","Components/EducationSection.js","Components/Summary.js","App.js","index.js"],"names":["Position","props","onChange","handlePosition","value","position","type","placeholder","Company","handleCompany","company","Period","handleFrom","from","handleTo","to","Experience","addNew","setState","experience","state","concat","e","index","target","parentNode","id","map","obj","i","delete","slice","length","dltBtn","this","className","onClick","submitted","content","elem","element","Component","FirstName","handleFirstNameChange","firstName","LastName","handleLastNameChange","lastName","PhoneNumber","handlePhoneChange","phoneNumber","Email","handleEmailChange","email","GeneralInfo","console","log","Diploma","handleDimploma","diploma","School","handleSchool","school","Major","handleMajor","major","EducationSection","educationExp","Summary","handleSummary","summary","App","submit","btnElement","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e7ea0957.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nfunction Position(props) {\n    return (\n        <div>\n            <input onChange={props.handlePosition} value={props.position} type=\"text\" placeholder=\"Enter Your Position Title\"></input>\n        </div>\n    )\n}\n\nfunction Company(props) {\n    return (\n        <div>\n            <input onChange={props.handleCompany} value={props.company} type=\"text\" placeholder=\"Enter Your Company Name\"></input>\n        </div>\n    )\n}\n\nfunction Period(props) {\n    return (\n        <div>\n            <input onChange={props.handleFrom} value={props.from} placeholder=\"Enter The Year Your Started\" type=\"number\"></input>\n            <input onChange={props.handleTo} value={props.to} placeholder=\"Enter The Year You Finished\" type=\"number\"></input>\n        </div>\n    )\n}\n\n\nclass Experience extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        experience: [\n          {\n            position: \"\",\n            company: \"\",\n            from: \"\",\n            to: \"\"        \n          }\n        ]\n      }\n    }\n  \n    addNew = () => {\n      this.setState({\n        experience: this.state.experience.concat({\n            position: \"\",\n            company: \"\",\n            from: \"\",\n            to: \"\"  \n        })\n      })\n    }\n  \n    handlePosition = (e) => {\n      let index = e.target.parentNode.parentNode.id;\n      this.setState({\n        experience : this.state.experience.map((obj, i) => {\n          if (i == index) {\n            return ({\n              position: e.target.value,\n              company: obj.company,\n              from: obj.from,\n              to: obj.to\n            }) \n          } else {return obj}\n        })\n      })\n    }\n  \n    handleCompany = (e) => {\n      let index = e.target.parentNode.parentNode.id;\n      this.setState({\n        experience : this.state.experience.map((obj, i) => {\n          if (i == index) {\n            return ({\n              position: obj.position,\n              company: e.target.value,\n              \n              from: obj.from,\n              to: obj.to\n            }) \n          } else {return obj}\n        })\n      })\n    }\n  \n    handleFrom = (e) => {\n      let index = e.target.parentNode.parentNode.id;\n      this.setState({\n        experience : this.state.experience.map((obj, i) => {\n          if (i == index) {\n            return ({\n              position: obj.position,\n              company: obj.company,\n              \n              from: e.target.value,\n              to: obj.to\n            }) \n          } else {return obj}\n        })\n      })\n    }\n  \n    handleTo = (e) => {\n      let index = e.target.parentNode.parentNode.id;\n      this.setState({\n        experience : this.state.experience.map((obj, i) => {\n          if (i == index) {\n            return ({\n              position: obj.position,\n              company: obj.company,\n              from: obj.from,\n              to: e.target.value\n            }) \n          } else {return obj}\n        })\n      })\n    }\n\n    delete = () => {\n      this.setState({\n        experience: this.state.experience.slice(0, this.state.experience.length -1 )\n      })\n    }\n  \n    render() {\n      let dltBtn = null;\n      if (this.state.experience.length > 1) {\n        dltBtn = <button className=\"dltBtn\" onClick={this.delete}>Delete</button>\n      }\n      if(!this.props.submitted) {\n        let element = this.state.experience.map((elem, index) => {\n          return (\n            <div className=\"item\" id={index}>\n              <Position position={elem.position} handlePosition={this.handlePosition}/>\n              <Company company={elem.company} handleCompany={this.handleCompany} />\n              <Period from={elem.from} to={elem.to} handleFrom={this.handleFrom} handleTo={this.handleTo}  />\n            </div>\n          )\n        })\n        return (\n          <div className=\"sectionContainer\">\n            <h1>Professionel Experience</h1>\n            {element}\n            <button className=\"addBtn\" onClick={this.addNew}>Add</button>\n            {dltBtn}\n          </div>\n        )\n      } else {\n        let content = this.state.experience.map((elem, index) => {\n          return (\n            <div className=\"expItem\">\n              <div className=\"positionDiv\" >\n                <span className=\"positionSpan\" >{elem.position}:</span>\n                <span className=\"periodSpan\" >( {elem.from} - {elem.to} )</span>\n              </div>\n              <div className=\"companyDiv\" >\n                <span className=\"companySpan\" >{elem.company}</span>\n              </div>\n            </div>\n          )\n        })\n        return (\n          <div className=\"cvExperience\">\n            <h1 className=\"expTitle\" >Professionel Experience</h1>\n            <div className=\"expContainer\" >{content}</div>\n          </div>\n        ) \n      }\n    }\n  \n  }\n  \n  \n  \n\nexport default Experience;\n\n","import React, { Component } from 'react';\nimport './Components.css';\n\nconst FirstName = (props) => {\n    return (\n        <div>\n            <input onChange={props.handleFirstNameChange} value={props.firstName} type=\"text\" placeholder=\"Enter Your First Name\" ></input>\n        </div>\n    )\n}\n\nconst LastName = (props) => {\n    return (\n        <div>\n            <input onChange={props.handleLastNameChange} value={props.lastName} type=\"text\" placeholder=\"Enter Your Last Name\" ></input>\n        </div>\n    )\n}\n\nconst PhoneNumber = (props) => {\n    return (\n        <div>\n            <input onChange={props.handlePhoneChange} value={props.phoneNumber} type=\"number\" placeholder=\"Enter Your Number\" ></input>\n        </div>\n    )\n}\n\nconst Email = (props) => {\n    return (\n        <div>\n            <input onChange={props.handleEmailChange} value={props.email} type=\"email\" placeholder=\"Enter Your Email\" ></input>\n        </div>\n    )\n}\n\nclass GeneralInfo extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            firstName: \"\",\n            lastName: \"\",\n            phoneNumber: \"\",\n            email: \"\"\n        }\n    }\n\n    handleFirstNameChange = (e) => {\n        this.setState({\n            firstName: e.target.value\n        })\n    }\n\n    handleLastNameChange = (e) => {\n        this.setState({\n            lastName: e.target.value\n        })\n        console.log(\"zbi\")\n    }\n\n    handlePhoneChange = (e) => {\n        this.setState({\n            phoneNumber: e.target.value\n        })\n    }\n    \n    handleEmailChange = (e) => {\n        this.setState({\n            email: e.target.value\n        })\n    }\n    \n    render() {\n        if (!this.props.submitted) {\n            \n            return (\n                <div className=\"sectionContainer\">\n                    <h1>General Information</h1>\n                    <FirstName \n                        handleFirstNameChange={this.handleFirstNameChange}\n                        firstName={this.state.firstName}\n                    />\n                    <LastName \n                        handleLastNameChange={this.handleLastNameChange}\n                        lastName={this.state.lastName}    \n                    />\n                    <PhoneNumber \n                        handlePhoneChange={this.handlePhoneChange}\n                        phoneNumber={this.state.phoneNumber}\n                    />\n                    <Email \n                        handleEmailChange={this.handleEmailChange}\n                        email={this.state.email}\n                    />\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"cvGeneral\" >\n                    <div className=\"fullName\">\n                        <span className=\"firstName\">{this.state.firstName}</span>\n                        <span className=\"lastName\">{this.state.lastName}</span>\n                    </div>\n                    <div className=\"contactDiv\">\n                        <span className=\"contactSpan\">Contact</span>\n                        <div className=\"phoneDiv\">\n                            <span className=\"phoneSpan\">Phone: </span>\n                            <span className=\"phoneInput\"> {this.state.phoneNumber}</span>\n                        </div>\n                        <div className=\"emailDiv\">\n                            <span className=\"emailSpan\">Email: </span>\n                            <span className=\"emailInput\" >{this.state.email}</span>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    } \n}\n\nexport default GeneralInfo;","import React, { Component } from 'react';\n\nimport uniqid from \"uniqid\";\n\nconst Diploma = (props) => {\n  return (\n    <div>\n      <input onChange={props.handleDimploma} value={props.diploma} type=\"text\" placeholder=\"Enter The Title Of The Diploma\"></input>\n    </div>\n  )\n}\n\nconst School = (props) => {\n  return (\n    <div>\n      <input onChange={props.handleSchool} value={props.school} type=\"text\" placeholder=\"Enter The School Name\"></input>\n    </div>\n  )\n}\n\nconst Major = (props) => {\n  return (\n    <div>\n      <input onChange={props.handleMajor} value={props.major} type=\"text\" placeholder=\"Enter The Major\"></input>\n    </div>\n  )\n}\n\nconst Period = (props) => {\n  return (\n    <div>\n      <input onChange={props.handleFrom} value={props.from} type=\"number\" placeholder=\"Enter The Year You Started\"></input>\n      <input onChange={props.handleTo} value={props.to} type=\"number\" placeholder=\"Enter The Year You Finished\"></input>\n    </div>\n  )\n} \n\nclass EducationSection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      educationExp: [\n        {\n          diploma: \"\",\n          school: \"\",\n          major: \"\",\n          from: \"\",\n          to: \"\"        \n        }\n      ]\n    }\n  }\n\n  addNew = () => {\n    this.setState({\n      educationExp: this.state.educationExp.concat({\n        diploma: \"\",\n        school: \"\",\n        major: \"\",\n        from: \"\",\n        to: \"\"  \n      })\n    })\n  }\n\n  handleDimploma = (e) => {\n    let index = e.target.parentNode.parentNode.id;\n    this.setState({\n      educationExp : this.state.educationExp.map((obj, i) => {\n        if (i == index) {\n          return ({\n            diploma: e.target.value,\n            school: obj.school,\n            major: obj.major,\n            from: obj.from,\n            to: obj.to\n          }) \n        } else {return obj}\n      })\n    })\n  }\n\n  handleSchool = (e) => {\n    let index = e.target.parentNode.parentNode.id;\n    this.setState({\n      educationExp : this.state.educationExp.map((obj, i) => {\n        if (i == index) {\n          return ({\n            diploma: obj.diploma,\n            school: e.target.value,\n            major: obj.major,\n            from: obj.from,\n            to: obj.to\n          }) \n        } else {return obj}\n      })\n    })\n  }\n\n  handleMajor = (e) => {\n    let index = e.target.parentNode.parentNode.id;\n    this.setState({\n      educationExp : this.state.educationExp.map((obj, i) => {\n        if (i == index) {\n          return ({\n            diploma: obj.diploma,\n            school: obj.school,\n            major: e.target.value,\n            from: obj.from,\n            to: obj.to\n          }) \n        } else {return obj}\n      })\n    })\n  }\n\n  handleFrom = (e) => {\n    let index = e.target.parentNode.parentNode.id;\n    this.setState({\n      educationExp : this.state.educationExp.map((obj, i) => {\n        if (i == index) {\n          return ({\n            diploma: obj.diploma,\n            school: obj.school,\n            major: obj.major,\n            from: e.target.value,\n            to: obj.to\n          }) \n        } else {return obj}\n      })\n    })\n  }\n\n  handleTo = (e) => {\n    let index = e.target.parentNode.parentNode.id;\n    this.setState({\n      educationExp : this.state.educationExp.map((obj, i) => {\n        if (i == index) {\n          return ({\n            diploma: obj.diploma,\n            school: obj.school,\n            major: obj.major,\n            from: obj.from,\n            to: e.target.value\n          }) \n        } else {return obj}\n      })\n    })\n  }\n\n  delete = () => {\n    this.setState({\n      educationExp: this.state.educationExp.slice(0, this.state.educationExp.length -1 )\n    })\n  }\n\n  render() {\n    if(!this.props.submitted) {\n      let dltBtn = null;\n      if (this.state.educationExp.length > 1) {\n        dltBtn = <button className=\"dltBtn\" onClick={this.delete}>Delete</button>\n      }\n      let element = this.state.educationExp.map((elem, index) => {\n        return (\n          <div className=\"item\" id={index}>\n            <Diploma diploma={elem.diploma} handleDimploma={this.handleDimploma}/>\n            <School school={elem.school} handleSchool={this.handleSchool} />\n            <Major major={elem.major} handleMajor={this.handleMajor} />\n            <Period from={elem.from} to={elem.to} handleFrom={this.handleFrom} handleTo={this.handleTo}  />\n          </div>\n        )\n      })\n      return (\n        <div className=\"sectionContainer\">\n          <h1>Education Background</h1>\n          {element}\n          <button className=\"addBtn\" onClick={this.addNew}>Add</button>\n          {dltBtn}\n        </div>\n      )\n    } else {\n      let content = this.state.educationExp.map((elem, index) => {\n        return (\n          <div className=\"educationItem\">\n            <div className=\"diplomaDiv\">\n              <span className=\"diplomaSpan\" >{elem.diploma}:</span>\n              <span className=\"majorSpan\" >{elem.major}</span>\n            </div>\n            <div className=\"schoolDiv\" >\n              <span className=\"schoolSpan\" >{elem.school}</span>\n              <span className=\"periodSpan\" >( {elem.from} - {elem.to} )</span>\n            </div>\n          </div>\n        )\n      })\n      return (\n        <div className=\"cvEducation\" >\n          <h1 className=\"educationTitle\" >Educational Background</h1>\n          <div className=\"educationContainer\" >{content}</div>\n        </div>\n      ) \n    }\n  }\n\n}\n\n\nexport default EducationSection;","import React, { Component } from \"react\";\n\nexport default class Summary extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            summary: \"\"\n        }\n    }\n\n    handleSummary = (e) => {\n        this.setState({\n            summary: e.target.value\n        })\n    }\n\n    render() {\n        if (!this.props.submitted) {\n            return (\n                <div className=\"sectionContainer\">\n                    <h1>Summary</h1>\n                    <textarea className=\"inputSummary\" onChange={this.handleSummary} value={this.state.summary} type=\"text\" placeholder=\"Write a little bit about yourself\"></textarea>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"cvSummary\">\n                    <h1 className=\"summaryTitle\" >Summary</h1>\n                    <span className=\"summaryInput\">{this.state.summary}</span>\n                </div>\n            )\n        }\n    }\n\n}\n\n","import React, { Component } from 'react';\nimport './App.css';\n// eslint-disable-next-line no-unused-vars\n\nimport Experience from './Components/Experience';\nimport GeneralInfo from './Components/GeneralInfo';\nimport EducationSection from './Components/EducationSection';\nimport Summary from './Components/Summary';\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      submitted: false,\n    }\n\n  }\n\n  submit = () => {\n    this.setState({\n      submitted: !this.state.submitted,\n    })\n  }\n\n  \n  render() {\n        let btnElement = \"\";\n        if (!this.state.submitted) {\n          btnElement = <button className=\"submit\" onClick={this.submit}>Submit</button>;\n        } else {\n          btnElement = <button className=\"edit\" onClick={this.submit}>Edit</button>\n        }\n        return (\n          <div className=\"container\">\n            <GeneralInfo submitted={this.state.submitted}/>\n            <Summary submitted={this.state.submitted}/>\n            <EducationSection submitted={this.state.submitted}/>\n            <Experience submitted={this.state.submitted}/>\n            {btnElement}\n          </div>\n        );\n  }\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}